{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Documents/Applications/costs/src/views/projects/Project.js\",\n    _s = $RefreshSig$();\n\nimport styles from './Project.module.css';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loading } from '../../components/layout/loaders/Loading';\nimport { Container } from '../../components/layout/case/Container';\nimport { ProjectForm } from '../../components/project/ProjectForm';\nimport { Message } from '../../components/layout/messages/Message';\nimport { ServiceForm } from '../../components/service/ServiceForm';\nimport { parse, v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Project = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState([]);\n  const [showProjectForm, setShowProjectForm] = useState(false);\n  const [showServiceForm, setShowServiceForm] = useState(false);\n  const [services, setServices] = useState([]);\n  const [message, setMessage] = useState();\n  const [typeMessage, setTypeMessage] = useState();\n  useEffect(() => {\n    fetch(`http://localhost:5000/projects/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => setProject(data)).catch();\n  }, [id]);\n\n  const editPost = project => {\n    // budget validation\n    if (project.budget < project.cost) {\n      setMessage('O orçamento não pode ser menor que o custo do projeto!');\n      setTypeMessage('error');\n      return false;\n    }\n\n    fetch(`http://localhost:5000/projects/${project.id}`, {\n      method: 'PATCH',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    }).then(res => res.json()).then(data => {\n      setProject(data);\n      setShowProjectForm(false);\n      setMessage('Projeto atualizado!');\n      setTypeMessage('sucess');\n    }).catch(e => console.log(e));\n  }; // cria de fato um serviço no sistema\n\n\n  const createService = project => {\n    console.log('custo do service', project.cost); // last service\n\n    const lastService = project.services[project.services.length - 1];\n    lastService.id = uuidv4();\n    const lastServiceCost = lastService.cost;\n    const newCost = parseFloat(project.cost) + parseFloat(lastServiceCost); // maximum value validation\n\n    if (newCost > parseFloat(project.budget)) {\n      setMessage('Orçamento ultrapassado, verifique o valor do serviço!');\n      setTypeMessage('error');\n      project.services.pop();\n      return false;\n    } // add service cost to project cost total\n\n\n    project.cost = newCost;\n    fetch(`http://localhost:5000/projects/${project.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    }).then(resp => resp.json()).then(data => {\n      setServices(data.services);\n      setShowServiceForm(!showServiceForm);\n      setMessage('Serviço adicionado!');\n      setTypeMessage('success');\n    });\n  };\n\n  const toggleProjectForm = () => {\n    setShowProjectForm(!showProjectForm);\n  };\n\n  const toggleServiceForm = () => {\n    setShowServiceForm(!showServiceForm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", project.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.project_details,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        customClass: \"column\",\n        children: [message && /*#__PURE__*/_jsxDEV(Message, {\n          type: typeMessage,\n          msg: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.details_container,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Projeto: \", project.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btn,\n            onClick: toggleProjectForm,\n            children: !showProjectForm ? 'Editar projeto' : 'Fechar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), !showProjectForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.project_info,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Categoria: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), \" \", project.category.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total de Or\\xE7amento: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), \" R$\", project.budget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total Utilizado: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), \" R$\", project.cost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.project_info,\n            children: /*#__PURE__*/_jsxDEV(ProjectForm, {\n              handleSubmit: editPost,\n              btnText: \"Concluir edi\\xE7\\xE3o\",\n              projectData: project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.service_form_container,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Adicione um servi\\xE7o: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btn,\n            onClick: toggleServiceForm,\n            children: !showServiceForm ? 'Adicionar serviço' : 'Fechar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.project_info,\n            children: showServiceForm && /*#__PURE__*/_jsxDEV(ServiceForm, {\n              handleSubmit: createService,\n              btnText: \"Adicionar servi\\xE7o\",\n              projectData: project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Servi\\xE7os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          customClass: \"start\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Itens de servi\\xE7os\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Project, \"sGNRdBvRUuGiL7DooI2Ldc3quWg=\", false, function () {\n  return [useParams];\n});\n\n_c = Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/home/lucas/Documents/Applications/costs/src/views/projects/Project.js"],"names":["styles","useParams","useEffect","useState","Loading","Container","ProjectForm","Message","ServiceForm","parse","v4","uuidv4","Project","id","project","setProject","showProjectForm","setShowProjectForm","showServiceForm","setShowServiceForm","services","setServices","message","setMessage","typeMessage","setTypeMessage","fetch","method","headers","then","res","json","data","catch","editPost","budget","cost","body","JSON","stringify","e","console","log","createService","lastService","length","lastServiceCost","newCost","parseFloat","pop","resp","toggleProjectForm","toggleServiceForm","name","project_details","details_container","btn","project_info","category","service_form_container"],"mappings":"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","sourcesContent":["import styles from './Project.module.css'\nimport { useParams } from 'react-router-dom'\nimport {\n  useEffect,\n  useState\n} from 'react'\nimport { Loading } from '../../components/layout/loaders/Loading'\nimport { Container } from '../../components/layout/case/Container'\nimport { ProjectForm } from '../../components/project/ProjectForm'\nimport { Message } from '../../components/layout/messages/Message'\nimport { ServiceForm } from '../../components/service/ServiceForm'\nimport {\n  parse,\n  v4 as uuidv4\n} from 'uuid'\n\nexport const Project = () => {\n  const { id } = useParams()\n  const [project, setProject] = useState([])\n  const [showProjectForm, setShowProjectForm] = useState(false)\n  const [showServiceForm, setShowServiceForm] = useState(false)\n  const [services, setServices] = useState([])\n  const [message, setMessage] = useState()\n  const [typeMessage, setTypeMessage] = useState()\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/projects/${id}`, {\n      method: 'GET',\n      headers: { 'Content-type': 'application/json' }\n    })\n      .then(res => res.json())\n      .then(data => setProject(data))\n      .catch()\n  }, [id])\n\n  const editPost = (project) => {\n    // budget validation\n    if (project.budget < project.cost) {\n      setMessage('O orçamento não pode ser menor que o custo do projeto!')\n      setTypeMessage('error')\n      return false\n    }\n\n    fetch(`http://localhost:5000/projects/${project.id}`, {\n      method: 'PATCH',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    })\n      .then(res => res.json())\n      .then(data => {\n        setProject(data)\n        setShowProjectForm(false)\n        setMessage('Projeto atualizado!')\n        setTypeMessage('sucess')\n      })\n      .catch(e => console.log(e))\n  }\n\n  // cria de fato um serviço no sistema\n  const createService = (project) => {\n    console.log('custo do service', project.cost)\n    // last service\n    const lastService = project.services[project.services.length - 1]\n\n    lastService.id = uuidv4()\n\n    const lastServiceCost = lastService.cost\n\n    const newCost = parseFloat(project.cost) + parseFloat(lastServiceCost)\n\n    // maximum value validation\n    if (newCost > parseFloat(project.budget)) {\n      setMessage('Orçamento ultrapassado, verifique o valor do serviço!')\n      setTypeMessage('error')\n      project.services.pop()\n      return false\n    }\n\n    // add service cost to project cost total\n    project.cost = newCost\n\n    fetch(`http://localhost:5000/projects/${project.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(project),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        setServices(data.services)\n        setShowServiceForm(!showServiceForm)\n        setMessage('Serviço adicionado!')\n        setTypeMessage('success')\n      })\n  }\n\n  const toggleProjectForm = () => {\n    setShowProjectForm(!showProjectForm)\n  }\n\n  const toggleServiceForm = () => {\n    setShowServiceForm(!showServiceForm)\n  }\n\n  return <> {\n    project.name ? (\n      <div className={styles.project_details}>\n        <Container customClass='column'>\n          {message && <Message type={typeMessage} msg={message} />}\n          <div className={styles.details_container}>\n            <h1>Projeto: {project.name}</h1>\n            <button className={styles.btn} onClick={toggleProjectForm}>{\n              !showProjectForm ? 'Editar projeto' : 'Fechar'\n            }</button>\n            {!showProjectForm ? (\n              <div className={styles.project_info}>\n                <p>\n                  <span>Categoria: </span> {project.category.name}\n                </p>\n                <p>\n                  <span>Total de Orçamento: </span> R${project.budget}\n                </p>\n                <p>\n                  <span>Total Utilizado: </span> R${project.cost}\n                </p>\n              </div>\n            ) : (\n              <div className={styles.project_info}>\n                <ProjectForm\n                  handleSubmit={editPost}\n                  btnText='Concluir edição'\n                  projectData={project}\n                />\n              </div>\n            )}\n          </div>\n          <div className={styles.service_form_container}>\n            <h2>Adicione um serviço: </h2>\n            <button className={styles.btn} onClick={toggleServiceForm}>\n              {!showServiceForm ? 'Adicionar serviço' : 'Fechar'}\n            </button>\n            <div className={styles.project_info}>\n              {showServiceForm && (\n                <ServiceForm\n                  handleSubmit={createService}\n                  btnText='Adicionar serviço'\n                  projectData={project}\n                />\n              )}\n            </div>\n          </div>\n          <h2>Serviços</h2>\n          <Container customClass='start'>\n            <p>Itens de serviços</p>\n          </Container>\n        </Container>\n      </div>) : (\n      <Loading />\n    )}\n  </>\n}"]},"metadata":{},"sourceType":"module"}