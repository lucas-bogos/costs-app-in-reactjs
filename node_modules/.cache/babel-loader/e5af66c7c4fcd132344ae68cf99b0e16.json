{"ast":null,"code":"import _defineProperty from\"/home/lucas/Documents/Applications/costs/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/lucas/Documents/Applications/costs/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/lucas/Documents/Applications/costs/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{Input}from\"../form/Input\";import{Select}from\"../form/Select\";import{SubmitButton}from\"../form/SubmitButton\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ProjectForm=function ProjectForm(_ref){var btnText=_ref.btnText,handleSubmit=_ref.handleSubmit,projectData=_ref.projectData;// o useState foi usado para pegar os dados da api, e setar em categories\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),categories=_useState2[0],setCategories=_useState2[1];var _useState3=useState(projectData||{}),_useState4=_slicedToArray(_useState3,2),project=_useState4[0],setProject=_useState4[1];/* o useEffect, corrigi o problema de várias requests sendo enviadas,\n        e renderiza uma única vez por load */useEffect(function(){fetch('http://localhost:5000/categories',{method:'get',headers:{'Content-Type':'application/json'}}).then(function(res){return res.json();}).then(function(data){return setCategories(data);}).catch(function(e){return console.log(e);});},[]);var submit=function submit(event){event.preventDefault();handleSubmit(project);};var handleChange=function handleChange(event){setProject(_objectSpread(_objectSpread({},project),{},_defineProperty({},event.target.name,event.target.value)));};var handleCategory=function handleCategory(event){setProject(_objectSpread(_objectSpread({},project),{},{category:{id:event.target.value,name:event.target.options[event.target.selectedIndex].text}}));};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submit,children:[/*#__PURE__*/_jsx(Input,{type:\"text\",text:\"Nome do projeto\",name:\"name\",handleOnChange:handleChange,placeholder:\"Insira o nome do projeto\",value:project.name?project.name:''}),/*#__PURE__*/_jsx(Input,{type:\"number\",text:\"Or\\xE7amento do projeto\",name:\"budget\",handleOnChange:handleChange,placeholder:\"Insira o or\\xE7amento total\"}),/*#__PURE__*/_jsx(Select,{name:\"category_id\",text:\"Selecione a categoria\",handleOnChange:handleCategory,options:categories,value:project.category?project.category.id:''// se tiver categoria setar com id categoria, se não matém vazio\n}),/*#__PURE__*/_jsx(SubmitButton,{text:btnText// insere dinamicamente o nome do botão\n})]});};","map":{"version":3,"sources":["/home/lucas/Documents/Applications/costs/src/components/project/ProjectForm.js"],"names":["useEffect","useState","Input","Select","SubmitButton","ProjectForm","btnText","handleSubmit","projectData","categories","setCategories","project","setProject","fetch","method","headers","then","res","json","data","catch","e","console","log","submit","event","preventDefault","handleChange","target","name","value","handleCategory","category","id","options","selectedIndex","text"],"mappings":"2XAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,KAAT,KAAsB,eAAtB,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,YAAT,KAA6B,sBAA7B,C,wFAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAIjB,IAHNC,CAAAA,OAGM,MAHNA,OAGM,CAFNC,YAEM,MAFNA,YAEM,CADNC,WACM,MADNA,WACM,CACN;AACA,cAAoCP,QAAQ,CAAC,EAAD,CAA5C,wCAAOQ,UAAP,eAAmBC,aAAnB,eACA,eAA8BT,QAAQ,CAACO,WAAW,EAAI,EAAhB,CAAtC,yCAAOG,OAAP,eAAgBC,UAAhB,eAEA;AACJ,6CACIZ,SAAS,CAAC,UAAM,CACZa,KAAK,CAAC,kCAAD,CAAqC,CACtCC,MAAM,CAAE,KAD8B,CAEtCC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAF6B,CAArC,CAAL,CAIKC,IAJL,CAIU,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAJV,EAKKF,IALL,CAKU,SAACG,IAAD,QAAUT,CAAAA,aAAa,CAACS,IAAD,CAAvB,EALV,EAMKC,KANL,CAMW,SAACC,CAAD,QAAOC,CAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP,EANX,EAOH,CARQ,CAQN,EARM,CAAT,CAUA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CACtBA,KAAK,CAACC,cAAN,GACAnB,YAAY,CAACI,OAAD,CAAZ,CACH,CAHD,CAKA,GAAMgB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,KAAD,CAAW,CAC5Bb,UAAU,gCAAMD,OAAN,wBAAgBc,KAAK,CAACG,MAAN,CAAaC,IAA7B,CAAoCJ,KAAK,CAACG,MAAN,CAAaE,KAAjD,GAAV,CACH,CAFD,CAIA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACN,KAAD,CAAW,CAC9Bb,UAAU,gCAAMD,OAAN,MAAeqB,QAAQ,CAAE,CAC/BC,EAAE,CAAER,KAAK,CAACG,MAAN,CAAaE,KADc,CAE/BD,IAAI,CAAEJ,KAAK,CAACG,MAAN,CAAaM,OAAb,CAAqBT,KAAK,CAACG,MAAN,CAAaO,aAAlC,EAAiDC,IAFxB,CAAzB,GAAV,CAIH,CALD,CAOA,mBACI,cAAM,QAAQ,CAAEZ,MAAhB,wBACI,KAAC,KAAD,EACI,IAAI,CAAC,MADT,CAEI,IAAI,CAAC,iBAFT,CAGI,IAAI,CAAC,MAHT,CAII,cAAc,CAAEG,YAJpB,CAKI,WAAW,CAAC,0BALhB,CAMI,KAAK,CAAEhB,OAAO,CAACkB,IAAR,CAAelB,OAAO,CAACkB,IAAvB,CAA8B,EANzC,EADJ,cASI,KAAC,KAAD,EACI,IAAI,CAAC,QADT,CAEI,IAAI,CAAC,yBAFT,CAGI,IAAI,CAAC,QAHT,CAII,cAAc,CAAEF,YAJpB,CAKI,WAAW,CAAC,6BALhB,EATJ,cAgBI,KAAC,MAAD,EACI,IAAI,CAAC,aADT,CAEI,IAAI,CAAC,uBAFT,CAGI,cAAc,CAAEI,cAHpB,CAII,OAAO,CAAEtB,UAJb,CAKI,KAAK,CAAEE,OAAO,CAACqB,QAAR,CAAmBrB,OAAO,CAACqB,QAAR,CAAiBC,EAApC,CAAyC,EAAI;AALxD,EAhBJ,cAuBI,KAAC,YAAD,EACI,IAAI,CAAE3B,OAAS;AADnB,EAvBJ,GADJ,CA6BH,CAlEM","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { Input } from \"../form/Input\"\nimport { Select } from \"../form/Select\"\nimport { SubmitButton } from \"../form/SubmitButton\"\n\nexport const ProjectForm = ({ \n    btnText,\n    handleSubmit,\n    projectData\n    }) => {\n    // o useState foi usado para pegar os dados da api, e setar em categories\n    const [categories, setCategories] = useState([])\n    const [project, setProject] = useState(projectData || {})\n\n    /* o useEffect, corrigi o problema de várias requests sendo enviadas,\n        e renderiza uma única vez por load */\n    useEffect(() => {\n        fetch('http://localhost:5000/categories', {\n            method: 'get',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then((res) => res.json())\n            .then((data) => setCategories(data))\n            .catch((e) => console.log(e))\n    }, [])\n\n    const submit = (event) => {\n        event.preventDefault()\n        handleSubmit(project)\n    }\n\n    const handleChange = (event) => {\n        setProject({ ...project, [event.target.name]: event.target.value})\n    }\n\n    const handleCategory = (event) => {\n        setProject({ ...project, category: {\n            id: event.target.value,\n            name: event.target.options[event.target.selectedIndex].text\n        }})\n    }\n\n    return (\n        <form onSubmit={submit}>\n            <Input \n                type='text'\n                text='Nome do projeto'\n                name='name'\n                handleOnChange={handleChange}\n                placeholder='Insira o nome do projeto'\n                value={project.name ? project.name : ''}\n            />\n            <Input \n                type='number' \n                text='Orçamento do projeto'\n                name='budget'\n                handleOnChange={handleChange}\n                placeholder='Insira o orçamento total' \n            />\n            <Select \n                name='category_id'\n                text='Selecione a categoria'\n                handleOnChange={handleCategory}\n                options={categories}\n                value={project.category ? project.category.id : ''} // se tiver categoria setar com id categoria, se não matém vazio\n            />\n            <SubmitButton  \n                text={btnText} // insere dinamicamente o nome do botão\n            />\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}